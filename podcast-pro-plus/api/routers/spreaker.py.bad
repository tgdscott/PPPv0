from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session

from api.core.database import get_session
from api.core.auth import get_current_user
from api.models.user import User
from api.services.publisher import SpreakerClient

router = APIRouter(prefix="/api/spreaker", tags=["spreaker"])


@router.get("/shows")
def get_spreaker_shows(
    session: Session = Depends(get_session),
    current_user: User = Depends(get_current_user),
):
    token = getattr(current_user, "spreaker_access_token", None)
    if not token:
        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="Not connected to Spreaker.")

    client = SpreakerClient(token)
    ok, result = client.get_shows()
    if not ok:
        raise HTTPException(status_code=status.HTTP_502_BAD_GATEWAY, detail=str(result))

    # IMPORTANT: keep the exact shape the FE expects
    return {"shows": result}
